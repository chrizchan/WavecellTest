@model Wavecell.Models.RegisterModel

@{
    ViewBag.Title = "Register";
}


<div class="container">
    <div class="row">
        <div class="col-md-5 col-md-offset-4">
            <div class="login-panel panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Register user</h3>
                </div>
                <div class="panel-body">
                    @using (Html.BeginForm("Register", "Account", null, FormMethod.Post, new { role = "form" }))
                    {
                        @Html.AntiForgeryToken()


                    if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                    {
                        <div class="alert alert-danger">
                            <a href="#" class="close" data-dismiss="alert">×</a>
                            <span class="help-block">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            </span>
                                </div>
                    }
                        <fieldset>
                            <div class="form-group">
                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "Firstname", value = "" })
                                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.TextBoxFor(m => m.Lastname, new { @class = "form-control", placeholder = "Lastname", value = "" })
                                @Html.ValidationMessageFor(m => m.Lastname, "", new { @class = "text-danger" })
                            </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email", value = "" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Password, new { @class = "form-control", placeholder = "Password", type = "password", value = "" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password", type = "password", value = "" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                        <input type="submit" value="Register" class="btn btn-lg btn-success btn-block" />

                        </fieldset>
                    }
                </div>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
